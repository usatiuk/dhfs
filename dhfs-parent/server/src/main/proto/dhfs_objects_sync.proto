syntax = "proto3";

import "dhfs_objects_serial.proto";

option java_multiple_files = true;
option java_package = "com.usatiuk.dhfs.repository";
option java_outer_classname = "DhfsObjectSyncApi";

package dhfs.objects.sync;

service DhfsObjectSyncGrpc {
  rpc OpPush (OpPushRequest) returns (OpPushReply) {}

  rpc GetObject (GetObjectRequest) returns (GetObjectReply) {}
  rpc CanDelete (CanDeleteRequest) returns (CanDeleteReply) {}

  rpc Ping (PingRequest) returns (PingReply) {}

  // TODO: Probably this would be better in a separate service
  // but it will be more boilerplate with the client factories
  rpc ProxyAvailableGet (ProxyAvailableRequest) returns (ProxyAvailableReply) {}
}

message ProxyAvailableInfo {
  string uuid = 1;
}

message ProxyAvailableRequest {

}

message ProxyAvailableReply {
  repeated ProxyAvailableInfo availableTargets = 1;
}
message PingRequest {}

message PingReply {}

message GetObjectRequest {
  dhfs.objects.persistence.JObjectKeyP name = 2;
}

message GetObjectReply {
  dhfs.objects.persistence.ObjectChangelog changelog = 5;
  dhfs.objects.persistence.JDataRemoteDtoP pushedData = 6;
}

message CanDeleteRequest {
  dhfs.objects.persistence.JObjectKeyP name = 2;
  repeated dhfs.objects.persistence.JObjectKeyP ourReferrers = 3;
}

message CanDeleteReply {
  bool deletionCandidate = 2;
  repeated dhfs.objects.persistence.JObjectKeyP referrers = 3;
}

message OpPushRequest {
  repeated OpP msg = 2;
}

message OpPushReply {

}

message OpP {
  bytes serializedData = 1;
}
